{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredientsArray","ingredient","ingredients","push","name","amount","ingredientsShown","map","ig","key","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","fetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"8LAoCeA,EAjCD,SAACC,GACb,IAAMC,EAAmB,GACzB,IAAK,IAAIC,KAAcF,EAAMG,YAC3BF,EAAiBG,KAAK,CACpBC,KAAMH,EACNI,OAAQN,EAAMG,YAAYD,KAG9B,IAAMK,EAAmBN,EAAiBO,KAAI,SAACC,GAAD,OAC5CA,EAAGH,OAAS,EACV,0BACEI,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,YAGVP,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,KAYE,QAEN,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,EAAjB,KACA,qCACS,2BAAIa,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,O,wCCtBpDC,E,kLAEFC,KAAKzB,MAAM0B,YAAYD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,U,+BAIpD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAgBb,OAfKL,KAAKzB,MAAM+B,UACdF,EACE,6BACGJ,KAAKzB,MAAM6B,OAAOrB,KAAI,SAACT,GACtB,OACE,kBAACoB,EAAD,CACET,IAAKX,EAAMiC,GACXV,MAAOvB,EAAMuB,MACbnB,YAAaJ,EAAMI,mBAOxB0B,M,GAtBUI,aA0CNC,uBAhBS,SAACC,GACvB,MAAO,CACLN,OAAQM,EAAMpC,MAAM8B,OACpBE,QAASI,EAAMpC,MAAMgC,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAACS,GAC1B,MAAO,CACLX,YAAa,SAACC,EAAOC,GAAR,OACXS,EAASC,IAAoBX,EAAOC,QAI3BM,CAGbK,YAAiBf,EAAQgB,O,mBCrD3BC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.5f3b0af9.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = (props) => {\n  const ingredientsArray = [];\n  for (let ingredient in props.ingredients) {\n    ingredientsArray.push({\n      name: ingredient,\n      amount: props.ingredients[ingredient],\n    });\n  }\n  const ingredientsShown = ingredientsArray.map((ig) =>\n    ig.amount > 0 ? (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"2px 5px\",\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    ) : null\n  );\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientsShown} </p>\n      <p>\n        Price: <b>{Number.parseFloat(props.price).toFixed(2)}</b>\n      </p>\n    </div>\n  );\n};\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = (\n        <div>\n          {this.props.orders.map((order) => {\n            return (\n              <Order\n                key={order.id}\n                price={order.price}\n                ingredients={order.ingredients}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n    return orders;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOrders: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};"],"sourceRoot":""}