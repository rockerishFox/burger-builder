{"ast":null,"code":"var _jsxFileName = \"/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderable: false,\n      checkout: false\n    };\n\n    this.checkoutHandler = () => {\n      this.setState({\n        checkout: true\n      });\n    };\n\n    this.checkoutCancelHandler = () => {\n      this.setState({\n        checkout: false\n      });\n    };\n\n    this.checkoutContinueHandler = () => {\n      // const queryParams = [];\n      // for (let i in this.state.ingredients) {\n      //   queryParams.push(\n      //     encodeURIComponent(i) +\n      //       \"=\" +\n      //       encodeURIComponent(this.state.ingredients[i])\n      //   );\n      // }\n      // queryParams.push(\"price=\" + this.state.totalPrice);\n      // const queryString = queryParams.join(\"&\");\n      this.props.history.push({\n        pathname: \"/checkout\" // search: \"?\" + queryString,\n\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients).map(key => {\n      return ingredients[key];\n    }).reduce((sum, el) => sum + el, 0); // this.setState({ orderable: sum > 0 });\n\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"Application doesn't work!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: type => this.props.addIngredient(type),\n        ingredientRemoved: type => this.props.removeIngredient(type),\n        disabled: disabledInfo,\n        price: this.props.price,\n        orderable: this.updatePurchaseState(this.props.ings),\n        ordered: this.checkoutHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        price: this.props.price,\n        checkoutCancel: this.checkoutCancelHandler,\n        checkoutContinue: this.checkoutContinueHandler,\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.checkout,\n      modalClosed: this.checkoutCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addIngredient: ing => dispatch(burgerBuilderActions.addIngredient(ing)),\n    removeIngredient: ing => dispatch(burgerBuilderActions.removeIngredient(ing))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","connect","actionTypes","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","burgerBuilderActions","BurgerBuilder","state","orderable","checkout","checkoutHandler","setState","checkoutCancelHandler","checkoutContinueHandler","props","history","push","pathname","componentDidMount","updatePurchaseState","updatedIngredients","ingredients","sum","Object","keys","map","key","reduce","el","render","disabledInfo","ings","orderSummary","burger","error","textAlign","type","addIngredient","removeIngredient","price","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ing"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    orderable: false,\n    checkout: false\n  };\n\n  componentDidMount() {\n    \n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients)\n      .map((key) => {\n        return ingredients[key];\n      })\n      .reduce((sum, el) => sum + el, 0);\n\n    // this.setState({ orderable: sum > 0 });\n    return sum > 0;\n  }\n\n  checkoutHandler = () => {\n    this.setState({ checkout: true });\n  };\n\n  checkoutCancelHandler = () => {\n    this.setState({ checkout: false });\n  };\n\n  checkoutContinueHandler = () => {\n    // const queryParams = [];\n    // for (let i in this.state.ingredients) {\n    //   queryParams.push(\n    //     encodeURIComponent(i) +\n    //       \"=\" +\n    //       encodeURIComponent(this.state.ingredients[i])\n    //   );\n    // }\n    // queryParams.push(\"price=\" + this.state.totalPrice);\n    // const queryString = queryParams.join(\"&\");\n    this.props.history.push({\n      pathname: \"/checkout\",\n      // search: \"?\" + queryString,\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? (\n      <p style={{ textAlign: \"center\" }}>Application doesn't work!</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={(type) => this.props.addIngredient(type)}\n            ingredientRemoved={(type) => this.props.removeIngredient(type)}\n            disabled={disabledInfo}\n            price={this.props.price}\n            orderable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.checkoutHandler}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          price={this.props.price}\n          checkoutCancel={this.checkoutCancelHandler}\n          checkoutContinue={this.checkoutContinueHandler}\n          ingredients={this.props.ings}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.checkout}\n          modalClosed={this.checkoutCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addIngredient: (ing) => dispatch(burgerBuilderActions.addIngredient(ing)),\n    removeIngredient: (ing) => dispatch(burgerBuilderActions.removeIngredient(ing)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}