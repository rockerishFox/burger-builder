{"ast":null,"code":"var _jsxFileName = \"/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { act } from \"react-dom/test-utils\";\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  cheese: 2,\n  meat: 3,\n  bacon: 4\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 10,\n      orderable: false,\n      checkout: false,\n      loading: false,\n      error: null\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCounter = this.state.ingredients[type];\n      const updatedCounter = oldCounter + 1;\n      const updateIngredients = { ...this.state.ingredients\n      };\n      updateIngredients[type] = updatedCounter;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updateIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updateIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCounter = this.state.ingredients[type];\n\n      if (oldCounter <= 0) {\n        return;\n      }\n\n      const updatedCounter = oldCounter - 1;\n      const updateIngredients = { ...this.state.ingredients\n      };\n      updateIngredients[type] = updatedCounter;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        ingredients: updateIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updateIngredients);\n    };\n\n    this.checkoutHandler = () => {\n      this.setState({\n        checkout: true\n      });\n    };\n\n    this.checkoutCancelHandler = () => {\n      this.setState({\n        checkout: false\n      });\n    };\n\n    this.checkoutContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      const queryString = queryParams.join(\"&\");\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString\n      });\n    };\n  }\n\n  componentDidMount() {// axios\n    //   .get(\"https://react-burger-builder-cb28d.firebaseio.com/ingredients.json\")\n    //   .then((response) => {\n    //     this.setState({ ingredients: response.data });\n    //   })\n    //   .catch((error) => {\n    //     this.setState({ error: true });\n    //   });\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients).map(key => {\n      return ingredients[key];\n    }).reduce((sum, el) => sum + el, 0);\n    this.setState({\n      orderable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, \"Application doesn't work!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        orderable: this.state.orderable,\n        ordered: this.checkoutHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        price: this.state.totalPrice,\n        checkoutCancel: this.checkoutCancelHandler,\n        checkoutContinue: this.checkoutContinueHandler,\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.checkout,\n      modalClosed: this.checkoutCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addIngredient: ing => dispatch({\n      type: actionTypes.ADD_ING,\n      ingredient: ing\n    }),\n    removeIngredient: ing => dispatch({\n      type: actionTypes.REMOVE_ING,\n      ingredient: ing\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","connect","actionTypes","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","act","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","orderable","checkout","loading","error","addIngredientHandler","type","oldCounter","ingredients","updatedCounter","updateIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","checkoutHandler","checkoutCancelHandler","checkoutContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","updatedIngredients","sum","Object","keys","map","key","reduce","el","render","disabledInfo","orderSummary","burger","textAlign","mapStateToProps","ings","mapDispatchToProps","dispatch","addIngredient","ing","ADD_ING","ingredient","removeIngredient","REMOVE_ING"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { act } from \"react-dom/test-utils\";\n\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  cheese: 2,\n  meat: 3,\n  bacon: 4,\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    totalPrice: 10,\n    orderable: false,\n    checkout: false,\n    loading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    // axios\n    //   .get(\"https://react-burger-builder-cb28d.firebaseio.com/ingredients.json\")\n    //   .then((response) => {\n    //     this.setState({ ingredients: response.data });\n    //   })\n    //   .catch((error) => {\n    //     this.setState({ error: true });\n    //   });\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients)\n      .map((key) => {\n        return ingredients[key];\n      })\n      .reduce((sum, el) => sum + el, 0);\n\n    this.setState({ orderable: sum > 0 });\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCounter = this.state.ingredients[type];\n    const updatedCounter = oldCounter + 1;\n    const updateIngredients = {\n      ...this.state.ingredients,\n    };\n    updateIngredients[type] = updatedCounter;\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n\n    this.setState({ ingredients: updateIngredients, totalPrice: newPrice });\n    this.updatePurchaseState(updateIngredients);\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCounter = this.state.ingredients[type];\n    if (oldCounter <= 0) {\n      return;\n    }\n    const updatedCounter = oldCounter - 1;\n    const updateIngredients = {\n      ...this.state.ingredients,\n    };\n    updateIngredients[type] = updatedCounter;\n\n    const priceDeduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n\n    this.setState({ ingredients: updateIngredients, totalPrice: newPrice });\n    this.updatePurchaseState(updateIngredients);\n  };\n\n  checkoutHandler = () => {\n    this.setState({ checkout: true });\n  };\n\n  checkoutCancelHandler = () => {\n    this.setState({ checkout: false });\n  };\n\n  checkoutContinueHandler = () => {\n    const queryParams = [];\n    for (let i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    const queryString = queryParams.join(\"&\");\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryString,\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? (\n      <p style={{ textAlign: \"center\" }}>Application doesn't work!</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            price={this.state.totalPrice}\n            orderable={this.state.orderable}\n            ordered={this.checkoutHandler}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          price={this.state.totalPrice}\n          checkoutCancel={this.checkoutCancelHandler}\n          checkoutContinue={this.checkoutContinueHandler}\n          ingredients={this.state.ingredients}\n        />\n      );\n    }\n\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.checkout}\n          modalClosed={this.checkoutCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.ingredients,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addIngredient: (ing) =>\n      dispatch({ type: actionTypes.ADD_ING, ingredient: ing }),\n    removeIngredient: (ing) =>\n      dispatch({ type: actionTypes.REMOVE_ING, ingredient: ing }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}