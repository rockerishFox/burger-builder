{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    meat: 0,\n    cheese: 0,\n    bacon: 0\n  },\n  totalPrice: 10\n};\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  cheese: 2,\n  meat: 3,\n  bacon: 4\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ING:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredient]: state.ingredients[action.ingredient] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredient]\n      };\n\n    case actionTypes.REMOVE_ING:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredient]: state.ingredients[action.ingredient] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredient]\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","salad","meat","cheese","bacon","totalPrice","INGREDIENT_PRICES","reducer","state","action","type","ADD_ING","ingredient","REMOVE_ING"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,MAAM,EAAE,CAHG;AAIXC,IAAAA,KAAK,EAAE;AAJI,GADM;AAOnBC,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,MAAMC,iBAAiB,GAAG;AACxBL,EAAAA,KAAK,EAAE,CADiB;AAExBE,EAAAA,MAAM,EAAE,CAFgB;AAGxBD,EAAAA,IAAI,EAAE,CAHkB;AAIxBE,EAAAA,KAAK,EAAE;AAJiB,CAA1B;;AAOA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAW,CAACa,OAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELR,QAAAA,WAAW,EAAE,EACX,GAAGQ,KAAK,CAACR,WADE;AAEX,WAACS,MAAM,CAACG,UAAR,GAAqBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,UAAzB,IAAuC;AAFjD,SAFR;AAMLP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACG,MAAM,CAACG,UAAR;AAN3C,OAAP;;AAQF,SAAKd,WAAW,CAACe,UAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,WAAW,EAAE,EACX,GAAGQ,KAAK,CAACR,WADE;AAEX,WAACS,MAAM,CAACG,UAAR,GAAqBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,UAAzB,IAAuC;AAFjD,SAFR;AAMLP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACG,MAAM,CAACG,UAAR;AAN3C,OAAP;AAXJ;;AAqBA,SAAOJ,KAAP;AACD,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    meat: 0,\n    cheese: 0,\n    bacon: 0,\n  },\n  totalPrice: 10,\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  cheese: 2,\n  meat: 3,\n  bacon: 4,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ING:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredient]: state.ingredients[action.ingredient] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredient],\n      };\n    case actionTypes.REMOVE_ING:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredient]: state.ingredients[action.ingredient] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredient],\n\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}