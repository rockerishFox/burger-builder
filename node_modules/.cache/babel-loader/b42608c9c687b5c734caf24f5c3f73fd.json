{"ast":null,"code":"var _jsxFileName = \"/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { act } from \"react-dom/test-utils\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 10,\n      orderable: false,\n      checkout: false,\n      loading: false,\n      error: null\n    };\n\n    this.checkoutHandler = () => {\n      this.setState({\n        checkout: true\n      });\n    };\n\n    this.checkoutCancelHandler = () => {\n      this.setState({\n        checkout: false\n      });\n    };\n\n    this.checkoutContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      const queryString = queryParams.join(\"&\");\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString\n      });\n    };\n  }\n\n  componentDidMount() {// axios\n    //   .get(\"https://react-burger-builder-cb28d.firebaseio.com/ingredients.json\")\n    //   .then((response) => {\n    //     this.setState({ ingredients: response.data });\n    //   })\n    //   .catch((error) => {\n    //     this.setState({ error: true });\n    //   });\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients).map(key => {\n      return ingredients[key];\n    }).reduce((sum, el) => sum + el, 0);\n    this.setState({\n      orderable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"Application doesn't work!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: type => this.props.addIngredient(type),\n        ingredientRemoved: type => this.props.removeIngredient(type),\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        orderable: this.state.orderable,\n        ordered: this.checkoutHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        price: this.props.price,\n        checkoutCancel: this.checkoutCancelHandler,\n        checkoutContinue: this.checkoutContinueHandler,\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.checkout,\n      modalClosed: this.checkoutCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addIngredient: ing => dispatch({\n      type: actionTypes.ADD_ING,\n      ingredient: ing\n    }),\n    removeIngredient: ing => dispatch({\n      type: actionTypes.REMOVE_ING,\n      ingredient: ing\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","connect","actionTypes","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","act","BurgerBuilder","state","totalPrice","orderable","checkout","loading","error","checkoutHandler","setState","checkoutCancelHandler","checkoutContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","updatePurchaseState","updatedIngredients","sum","Object","keys","map","key","reduce","el","render","disabledInfo","ings","orderSummary","burger","textAlign","type","addIngredient","removeIngredient","price","mapStateToProps","mapDispatchToProps","dispatch","ing","ADD_ING","ingredient","REMOVE_ING"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"../../axios-orders\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { act } from \"react-dom/test-utils\";\n\n\nclass BurgerBuilder extends Component {\n  state = {\n    totalPrice: 10,\n    orderable: false,\n    checkout: false,\n    loading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    // axios\n    //   .get(\"https://react-burger-builder-cb28d.firebaseio.com/ingredients.json\")\n    //   .then((response) => {\n    //     this.setState({ ingredients: response.data });\n    //   })\n    //   .catch((error) => {\n    //     this.setState({ error: true });\n    //   });\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients)\n      .map((key) => {\n        return ingredients[key];\n      })\n      .reduce((sum, el) => sum + el, 0);\n\n    this.setState({ orderable: sum > 0 });\n  }\n\n  checkoutHandler = () => {\n    this.setState({ checkout: true });\n  };\n\n  checkoutCancelHandler = () => {\n    this.setState({ checkout: false });\n  };\n\n  checkoutContinueHandler = () => {\n    const queryParams = [];\n    for (let i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    const queryString = queryParams.join(\"&\");\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryString,\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? (\n      <p style={{ textAlign: \"center\" }}>Application doesn't work!</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={(type) =>this.props.addIngredient(type)}\n            ingredientRemoved={(type) =>this.props.removeIngredient(type)}\n            disabled={disabledInfo}\n            price={this.state.totalPrice}\n            orderable={this.state.orderable}\n            ordered={this.checkoutHandler}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          price={this.props.price}\n          checkoutCancel={this.checkoutCancelHandler}\n          checkoutContinue={this.checkoutContinueHandler}\n          ingredients={this.props.ings}\n        />\n      );\n    }\n\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.checkout}\n          modalClosed={this.checkoutCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addIngredient: (ing) =>\n      dispatch({ type: actionTypes.ADD_ING, ingredient: ing }),\n    removeIngredient: (ing) =>\n      dispatch({ type: actionTypes.REMOVE_ING, ingredient: ing }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}