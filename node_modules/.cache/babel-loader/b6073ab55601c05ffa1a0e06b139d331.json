{"ast":null,"code":"var _jsxFileName = \"/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"../Checkout/ContactData/ContactData\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinueHandler = () => {\n      this.props.history.replace(\"/checkout/contact-data\");\n    };\n  }\n\n  componentWillMount() {// // it's not nested so it will always mount\n    // const query = new URLSearchParams(this.props.location.search);\n    // const ingredients = {};\n    // let price = 0;\n    // for (let param of query.entries()) {\n    //   if (param[0] === \"price\") {\n    //     price = param[1];\n    //   } else {\n    //     ingredients[param[0]] = +param[1]; // + converts into number\n    //   }\n    // }\n    // this.setState({ ingredients: ingredients, price: price });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CheckoutSummary, {\n      ingredients: this.props.ings,\n      checkoutCancel: this.checkoutCancelHandler,\n      checkoutContinue: this.checkoutContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: this.props.match.path + \"/contact-data\",\n      component: ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), \")} />\");\n  }\n\n}\n\nconst mapStateToProp = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nexport default connect(mapStateToProp)(Checkout);","map":{"version":3,"sources":["/Users/deliacsiki/Projects/React/_Git/Burger Builder/burger-builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","CheckoutSummary","ContactData","connect","Checkout","checkoutCancelHandler","props","history","goBack","checkoutContinueHandler","replace","componentWillMount","render","ings","match","path","mapStateToProp","state","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAgB/BM,qBAhB+B,GAgBP,MAAM;AAC5B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACD,KAlB8B;;AAAA,SAoB/BC,uBApB+B,GAoBL,MAAM;AAC9B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACD,KAtB8B;AAAA;;AAC/BC,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAUDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,IAD1B;AAEE,MAAA,cAAc,EAAE,KAAKR,qBAFvB;AAGE,MAAA,gBAAgB,EAAE,KAAKI,uBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,GAAwB,eADhC;AAEE,MAAA,SAAS,EAAEb,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,UADF;AAeD;;AAxC8B;;AA2CjC,MAAMc,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAACa,cAAD,CAAP,CAAwBZ,QAAxB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"../Checkout/ContactData/ContactData\";\n\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  componentWillMount() {\n    // // it's not nested so it will always mount\n    // const query = new URLSearchParams(this.props.location.search);\n    // const ingredients = {};\n    // let price = 0;\n    // for (let param of query.entries()) {\n    //   if (param[0] === \"price\") {\n    //     price = param[1];\n    //   } else {\n    //     ingredients[param[0]] = +param[1]; // + converts into number\n    //   }\n    // }\n    // this.setState({ ingredients: ingredients, price: price });\n  }\n\n  checkoutCancelHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinueHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.props.ings}\n          checkoutCancel={this.checkoutCancelHandler}\n          checkoutContinue={this.checkoutContinueHandler}\n        />\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          component={ContactData}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = (state) => {\n  return {\n    ings: state.ingredients,\n  };\n};\n\nexport default connect(mapStateToProp)(Checkout);\n"]},"metadata":{},"sourceType":"module"}